<?xml version="1.0" encoding="utf-8"?>
<root xmlns:android="http://schemas.android.com/apk/res/android">
	<androidManifestUpdates>
		<addPermission android:name="android.permission.BLUETOOTH"/>
		<addPermission android:name="android.permission.BLUETOOTH_ADMIN"/>
		<addPermission android:name="android.permission.BLUETOOTH_SCAN"/>
		<addPermission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
		<addPermission android:name="android.permission.BLUETOOTH_CONNECT"/>
		<addPermission android:name="android.permission.ACCESS_FINE_LOCATION"/>
		<addPermission android:name="android.permission.ACCESS_WIFI_STATE"/>
		<addPermission android:name="android.permission.CHANGE_WIFI_STATE"/>
		<addPermission android:name="android.permission.BLUETOOTH_ADVERTISE"/>
		<addPermission android:name="android.permission.INTERNET"/>
        <addPermission android:name="android.permission.POST_NOTIFICATIONS"/>
		<insert>
			<uses-feature android:name="android.hardware.location.gps" />
		</insert>
		<insert>
			<uses-feature android:name="android.hardware.bluetooth_le" />
		</insert>
		<insert>
			<uses-feature android:name="android.hardware.bluetooth" />
		</insert>
        <addElements tag="application">
        <service android:name="com.aroundmelib.DIY_Service"
                 android:enabled="true"
                 android:exported="true"
                 android:foregroundServiceType="dataSync"/>
    </addElements>
	</androidManifestUpdates>

    
	<buildGradleAdditions> 
		<insert>
		
			dependencies 
            {
            implementation ('androidx.appcompat:appcompat:1.3.1')
			}
		
		</insert>
	</buildGradleAdditions>

<!-- implementation('androidx.work:work-runtime:2.4.0')
			implementation ('androidx.multidex:multidex:2.0.1')
			implementation ('com.google.android.material:material:1.5.0')
			implementation ('androidx.constraintlayout:constraintlayout:2.1.3') -->


	<!--<gradleProperties>
		<insert>
			android.useAndroidX=true
			android.enableJetifier=true
		</insert>

	</gradleProperties>-->



    <init>
		<log text="[SJL] DIYPlatformService Android INIT"/>
	</init>
<prebuildCopies>
    <copyFile src="$S(PluginDir)/../../../../../AroundMeLib/app/src/main/java/com/aroundmelib/DIY_CommuDevice.java"
              dst="$S(BuildDir)/src/com/aroundmelib/DIY_CommuDevice.java"/>

    <copyFile src="$S(PluginDir)/../../../../../AroundMeLib/app/src/main/java/com/aroundmelib/DIY_CommuManager.java"
              dst="$S(BuildDir)/src/com/aroundmelib/DIY_CommuManager.java" />

    <copyFile src="$S(PluginDir)/../../../../../AroundMeLib/app/src/main/java/com/aroundmelib/DIY_CommuUtils.java"
              dst="$S(BuildDir)/src/com/aroundmelib/DIY_CommuUtils.java" />

    <copyFile src="$S(PluginDir)/../../../../../AroundMeLib/app/src/main/java/com/aroundmelib/DIY_Service.java"
              dst="$S(BuildDir)/src/com/aroundmelib/DIY_Service.java" />
    
    <copyFile src="$S(PluginDir)/../../../../../AroundMeLib/app/src/main/java/com/aroundmelib/DIY_CommuManagerReportSchema.java"
              dst="$S(BuildDir)/src/com/aroundmelib/DIY_CommuManagerReportSchema.java" />

    <copyFile src="$S(PluginDir)/../../../../../AroundMeLib/app/src/main/java/com/aroundmelib/DIY_PermissionHelper.java"
              dst="$S(BuildDir)/src/com/aroundmelib/DIY_PermissionHelper.java" />





</prebuildCopies>
    <!-- optional additions to proguard -->
    <proguardAdditions>
        <insert>
            -dontwarn com.aroundmelib.**
            -keep class com.aroundmelib.** { *; }
            -keep interface com.aroundmelib.** { *; }
        </insert>
    </proguardAdditions>

	<!--<baseBuildGradleAdditions>
		<insert>
			allprojects
			{
			repositories {
			maven { url 'https://jitpack.io' }
			google()
			mavenCentral()
			}
			}

		</insert>
	</baseBuildGradleAdditions>-->



	<!--<baseBuildGradleAdditions>
		<insert>

			allprojects {
			def mappings = [
			'android.support.annotation': 'androidx.annotation',
			'android.arch.lifecycle': 'androidx.lifecycle',
			'android.support.v4.app.NotificationCompat': 'androidx.core.app.NotificationCompat',
			'android.support.v4.app.ActivityCompat': 'androidx.core.app.ActivityCompat',
			'android.support.v4.content.ContextCompat': 'androidx.core.content.ContextCompat',
			'android.support.v13.app.FragmentCompat': 'androidx.legacy.app.FragmentCompat',
			'android.arch.lifecycle.Lifecycle': 'androidx.lifecycle.Lifecycle',
			'android.arch.lifecycle.LifecycleObserver': 'androidx.lifecycle.LifecycleObserver',
			'android.arch.lifecycle.OnLifecycleEvent': 'androidx.lifecycle.OnLifecycleEvent',
			'android.arch.lifecycle.ProcessLifecycleOwner': 'androidx.lifecycle.ProcessLifecycleOwner',
			]
			beforeEvaluate { project ->
			project.rootProject.projectDir.traverse(type: groovy.io.FileType.FILES, nameFilter: ~/.*\.java$/) { f ->
			mappings.each { entry ->
			if (f.getText('UTF-8').contains(entry.key)) {
			println "Updating ${entry.key} to ${entry.value} in file ${f}"
			ant.replace(file: f, token: entry.key, value: entry.value)
			}
			}
			}
			}
			}
		</insert>
	</baseBuildGradleAdditions>-->


	<!--<proguardAdditions>
		<insert>
		</insert>
	</proguardAdditions>-->


	<gameActivityImportAdditions>
		<insert>
			import android.Manifest;
			import android.annotation.SuppressLint;
			import android.bluetooth.BluetoothAdapter;
			import android.bluetooth.BluetoothDevice;
			import android.bluetooth.BluetoothGatt;
			import android.bluetooth.BluetoothGattCallback;
			import android.bluetooth.BluetoothGattCharacteristic;
			import android.bluetooth.BluetoothGattDescriptor;
			import android.bluetooth.BluetoothGattServer;
			import android.bluetooth.BluetoothGattServerCallback;
			import android.bluetooth.BluetoothGattService;
			import android.bluetooth.BluetoothManager;
			import android.bluetooth.BluetoothProfile;
			import android.bluetooth.le.AdvertiseCallback;
			import android.bluetooth.le.AdvertiseData;
			import android.bluetooth.le.AdvertiseSettings;
			import android.bluetooth.le.BluetoothLeAdvertiser;
			import android.bluetooth.le.BluetoothLeScanner;
			import android.bluetooth.le.ScanCallback;
			import android.bluetooth.le.ScanFilter;
			import android.bluetooth.le.ScanResult;
			import android.bluetooth.le.ScanSettings;
			import android.content.BroadcastReceiver;
			import android.content.Context;
			import android.content.Intent;
			import android.content.IntentFilter;
			import android.content.pm.PackageManager;
			import android.net.wifi.p2p.WifiP2pManager;
			import android.os.Build;
			import android.os.Bundle;
			import android.os.Handler;
			import android.os.ParcelUuid;
			import android.view.MotionEvent;
			import android.view.View;
			import android.widget.ArrayAdapter;
			import android.widget.Button;
			import android.widget.EditText;
			import android.widget.LinearLayout;
			import android.widget.ListView;
			import android.widget.ScrollView;
			import android.widget.TextView;
			import android.widget.Toast;
			import java.nio.charset.Charset;
			import java.nio.charset.StandardCharsets;
			import java.util.ArrayList;
			import java.util.Arrays;
			import java.util.HashMap;
			import java.util.List;
			import java.util.Map;
			import java.util.UUID;
            import androidx.core.app.ActivityCompat;
            import androidx.core.content.ContextCompat;
            import android.content.Intent;
            import com.aroundmelib.DIY_Service;
			import com.aroundmelib.DIY_PermissionHelper;
			import com.aroundmelib.DIY_CommuManagerReportSchema;
			import com.aroundmelib.DIY_CommuUtils;
		</insert>
	</gameActivityImportAdditions>


	<gameActivityClassAdditions>
		<insert>
			<![CDATA[
	]]>
		</insert>
	</gameActivityClassAdditions>

	<gameActivityOnCreateAdditions>
		<insert>

			<![CDATA[

			
			]]>

		</insert>
	</gameActivityOnCreateAdditions>



	<gameActivityOnDestroyAdditions>
		<insert>
			<![CDATA[

			]]>
		</insert>
	</gameActivityOnDestroyAdditions>


	<gameActivityOnResumeAdditions>
		<insert>
			<![CDATA[

			
			]]>
		</insert>
	</gameActivityOnResumeAdditions>



	<gameActivityOnPauseAdditions>
		<insert>
			<![CDATA[

			]]>
		</insert>
	</gameActivityOnPauseAdditions>


	<gameActivityOnActivityResultAdditions>
		<insert>
			<![CDATA[

if (requestCode == DIY_PermissionHelper.REQUEST_ENABLE_BT) {
        if (resultCode == Activity.RESULT_OK) {
            DIY_CommuUtils.PushToast(this, "✅ 蓝牙已开启");
        } else {
            DIY_CommuUtils.PushToast(this, "❌ 必须开启蓝牙才能使用 AroundMe");
            DIY_PermissionHelper.showEnableBluetoothDialog(this);
        }
    }
			]]>
		</insert>
	</gameActivityOnActivityResultAdditions>



	<gameActivityOnRequestPermissionsResultAdditions>
		<insert>
			<![CDATA[

 if (DIY_PermissionHelper.handlePermissionsResult(this, requestCode, permissions, grantResults))
        {
		
        }

				]]>

		</insert>
	</gameActivityOnRequestPermissionsResultAdditions>








</root>